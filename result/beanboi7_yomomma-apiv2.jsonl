{"repo_info": {"repo_name": "yomomma-apiv2", "repo_owner": "beanboi7", "repo_url": "https://github.com/beanboi7/yomomma-apiv2"}}
{"type": "source_file", "path": "app/__init__.py", "content": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n__version__ = \"0.1.0\""}
{"type": "source_file", "path": "app/main.py", "content": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\nfrom random import choice\nfrom typing import Optional\nfrom fastapi import FastAPI\nfrom fastapi.exceptions import HTTPException\nfrom json import load\n\nfrom starlette.requests import Request\nfrom slowapi import Limiter, _rate_limit_exceeded_handler\nfrom slowapi.util import get_remote_address\nfrom slowapi.errors import RateLimitExceeded\nfrom slowapi.middleware import SlowAPIMiddleware\n\nwith open('./jokes.json') as f:\n    all_jokes = load(f)\n\nlimiter = Limiter(key_func=get_remote_address, default_limits = [\"5/minute\"])\napp = FastAPI()\napp.state.limiter = limiter\napp.add_exception_handler(RateLimitExceeded, _rate_limit_exceeded_handler)\napp.add_middleware(SlowAPIMiddleware)\n\n@app.get(\"/\")\nasync def home():\n    return {\"joke\": \"Yo momma\"}\n\n\n@app.get(\"/jokes\")\nasync def send_joke(count: Optional[int] = 1):\n    if count > 1 and count < len(all_jokes):\n        return [{\"joke\": choice(all_jokes)} for i in range(count)]\n    elif count == 1:\n        return {\"joke\": choice(all_jokes)}\n    else:\n        raise HTTPException(status_code=404, detail=\"Invalid count parameter\")\n\n\n@app.get(\"/jokes/{index}\")\nasync def send_specific_joke(index: int):\n    if index > len(all_jokes) or index < 0:\n        raise HTTPException(status_code=404, detail=\"Index out of range\")\n    return {\"joke\": all_jokes[index]}\n\n\n@app.get(\"/search\")\nasync def search_joke(query: str):\n    if query.lower() == \"yo momma\":\n        return {\"results\": \"DON'T\"}\n\n    result = [joke for joke in all_jokes if query in joke.lower().split()]\n    return {\"results\": result}\n"}
